{"version":3,"sources":["model.js","utils/formatters.js","view/updateResultsView.js","utils/updateModel.js","view/radioPrograms.js","view/utils.js","view/costInput.js","view/costRange.js","view/paymentInput.js","view/paymentRange.js","view/timeInput.js","view/timeRange.js","controller.js"],"names":["data","selectedProgram","cost","minPrice","maxPrice","minPaymentPercents","maxPaymentPercents","paymentPercents","payment","getMinPayment","getMaxPayment","minYear","maxYear","time","programs","base","it","gov","zero","results","rate","getData","_objectSpread","getResults","setData","newData","console","log","onUpdate","id","months","totalAmount","monthRate","generalRate","Math","pow","monthPayment","overPayment","priceFormatter","exports","Intl","NumberFormat","style","currency","maximumFractionDigits","priceFormatterDecimals","_formatters","require","updateResultsView","document","querySelector","innerHTML","format","_default","default","updateModel","element","dispatchEvent","CustomEvent","bubbles","detail","_updateModel","_interopRequireDefault","obj","__esModule","init","radioButtons","querySelectorAll","_getData$programs","value","innerText","forEach","addEventListener","parseFloat","updateMinPercents","input","cleveInput","Cleave","numeral","numeralThousandsGroupStyle","delimiter","setRawValue","getRawValue","closest","classList","add","remove","slider","noUiSlider","create","start","connect","tooltips","step","range","min","max","wNumb","decimals","thousand","suffix","on","sliderValue","get","split","parseInt","String","replace","Model","_interopRequireWildcard","_updateResultsView","_radioPrograms","_utils","_costInput","_costRange","_paymentInput","_paymentRange","_timeInput","_timeRange","_getRequireWildcardCache","e","WeakMap","r","t","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","window","onload","cleveCost","costInput","sliderCost","costRange","clevePayment","paymentInput","sliderPayment","paymentRange","cleveTime","timeInput","sliderTime","timeRange","updateOptions","updateFormAndSliders","openFormBtn","orderForm","submitFormBtn","preventDefault","formData","FormData","_fetchData","_callee","url","checkOnUrl","response","result","_callee$","_context","_checkOnUrl","urlArrayDot","join","urlArraySlash","newUrl","location","href","fetch","headers","body","JSON","stringify","form","email","phone","text","removeAttribute","getElementById","setAttribute","fetchData"],"mappings":"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","file":"controller.js","sourceRoot":"../js","sourcesContent":["let data = {\n    selectedProgram: 0.1,\n    cost: 12000000,\n    minPrice: 375000,\n    maxPrice: 100000000,\n    minPaymentPercents: 0.15,\n    maxPaymentPercents: 0.9,\n    paymentPercents: 0.5, \n    payment: 6000000, \n    getMinPayment: function() {\n        return this.cost * this.minPaymentPercents;\n    },\n    getMaxPayment: function() {\n        return this.cost * this.maxPaymentPercents;\n    },\n    minYear: 1,\n    maxYear: 30,\n    time: 10, \n    programs: {\n        base: 0.1, \n        it: 0.047,\n        gov: 0.067,\n        zero: 0.12, \n    },\n} \n\nlet results = {\n    rate: data.selectedProgram,\n}\n\nfunction getData() {\n    return {...data};\n}\n\nfunction getResults() {\n    return {...results};\n}\n\nfunction setData(newData) {\n    console.log('New data', newData);\n\n    if (newData.onUpdate === 'radioProgram') {\n        if (newData.id === 'zero-value') {\n            data.minPaymentPercents = 0; \n        } else { \n            data.minPaymentPercents = 0.15; \n        }\n    } \n\n    if (newData.onUpdate === 'inputCost' || newData.onUpdate === 'costSlider' ) {\n\n        if (newData.cost < data.minPrice) {\n            newData.cost = data.minPrice\n        };\n\n        if (newData.cost > data.maxPrice) {\n            newData.cost = data.maxPrice\n        };\n\n        // if the new cost is less than the original\n        if (data.payment > data.getMaxPayment()) { \n            data.payment = data.getMaxPayment();\n        }\n        // if the count of original is less than acceptable min payment\n        if (data.payment < data.getMinPayment()) {\n            data.payment = data.getMinPayment(); \n        }\n\n        data.paymentPercents = (data.payment * 100) / newData.cost / 100;\n    }\n    \n    if (newData.onUpdate === 'inputPayment') {\n        newData.paymentPercents = (newData.payment * 100) / data.cost / 100; \n\n        // if % more than 90\n        if (newData.paymentPercents > data.maxPaymentPercents) {\n            newData.paymentPercents = data.maxPaymentPercents;\n            newData.payment = data.cost * data.maxPaymentPercents; \n        }\n\n        // if % less than 15 or 0\n        if (newData.paymentPercents > data.minPaymentPercents) {\n            newData.paymentPercents = data.minPaymentPercents;\n            newData.payment = data.cost * data.minPaymentPercents; \n        }\n    }\n\n    if (newData.onUpdate === 'paymentSlider') {\n        newData.paymentPercents = newData.paymentPercents / 100;\n        data.payment = data.cost * newData.paymentPercents; \n    }\n\n    if (newData.onUpdate === 'inputTime') { \n        if (newData.time > data.maxYear) {\n            newData.time = data.maxYear;\n        }\n\n        if (newData.time < data.minYear) {\n            newData.time = data.minYear;\n        }\n    }\n\n    data = {\n        ...data,\n        ...newData,\n    };\n\n    // mortgage calculation\n    const months = data.time * 12;\n    console.log('months', months);\n\n    const totalAmount = data.cost - data.payment;\n    console.log('totalAmounth', totalAmount)\n\n    const monthRate = data.selectedProgram / 12;\n    console.log('monthRate', monthRate);\n\n    const generalRate = (1 + monthRate) ** months;\n    console.log('generalRate', generalRate);\n\n    const monthPayment = (totalAmount * monthRate * generalRate) / (generalRate - 1);\n    console.log('monthPayment', monthPayment);\n\n    const overPayment = monthPayment * months - totalAmount;\n    console.log('overPayment', overPayment);\n\n    results = {\n        rate: data.selectedProgram,\n        totalAmount,\n        monthPayment,\n        overPayment\n    };\n\n    console.log('Updated data', data);\n    console.log(results);\n}\n\nexport {getData, setData, getResults};","const priceFormatter = new Intl.NumberFormat('ru-Ru', {\n    style: 'currency',\n    currency: 'RUB',\n    maximumFractionDigits: 0,\n})\n\nconst priceFormatterDecimals = new Intl.NumberFormat('ru-Ru', {\n    style: 'currency',\n    currency: 'RUB',\n    maximumFractionDigits: 2,\n})\n\nexport { priceFormatter, priceFormatterDecimals };","import { priceFormatter, priceFormatterDecimals } from \"./../utils/formatters.js\"\n\nfunction updateResultsView (results) {\n    document.querySelector('#total-percent').innerHTML = results.rate * 100 + '%';\n    document.querySelector('#total-month-payment').innerHTML = priceFormatterDecimals.format(results.monthPayment);\n    document.querySelector('#total-cost').innerHTML = priceFormatter.format(results.totalAmount);\n    document.querySelector('#total-overpayment').innerHTML = priceFormatterDecimals.format(results.overPayment);\n}\n\nexport default updateResultsView;","function updateModel (element, data) {\n    element.dispatchEvent(\n        new CustomEvent('updateForm', {\n            bubbles: true,\n            detail: {...data}\n        })\n    );\n}\n\nexport default updateModel;","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    \n    const radioButtons = document.querySelectorAll('input[name=\"program\"]'); \n    const {base, it, gov, zero} = getData().programs;\n\n    // Set program rates in radio buttons\n    document.querySelector('#base-value').value = base;\n    document.querySelector('#it-value').value = it; \n    document.querySelector('#gov-value').value = gov;\n    document.querySelector('#zero-value').value = zero;\n\n    // Show program rates on page\n    document.querySelector('#base-text').innerText = base * 100 + '%';\n    document.querySelector('#it-text').innerText = it * 100 + '%';\n    document.querySelector('#gov-text').innerText = gov * 100 + '%';\n    document.querySelector('#zero-text').innerText = zero * 100 + '%';\n\n    radioButtons.forEach(function (radioButtons) {\n        radioButtons.addEventListener('change', function () {\n            updateModel(this, {\n                selectedProgram: parseFloat(this.value),\n                onUpdate: 'radioProgram',\n                id: this.id,\n            })\n        });\n    })\n}\n\nexport default init;","function updateMinPercents(data) {\n    document.querySelector('#percents-from').innerText = data.minPaymentPercents * 100 + '%';\n}\n\nexport { updateMinPercents }; ","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    const input = document.querySelector('#input-cost');\n\n    const settings = {\n        numeral: true,\n        numeralThousandsGroupStyle: 'thousand',\n        delimiter: ' ',\n    }; \n\n    const cleveInput = new Cleave(input, settings);\n    cleveInput.setRawValue(getData().cost);\n\n    input.addEventListener('input', function() {\n        const value = +cleveInput.getRawValue();\n\n        // Checking the minimum and maximum price \n        if (value < getData().minPrice || value > getData().maxPrice) {\n            input.closest('.param__details').classList.add('param__details--error');\n        }\n\n        if (value >= getData().minPrice &&  value <= getData().maxPrice) {\n            input.closest('.param__details').classList.remove('param__details--error');\n        }\n\n        updateModel(input, {\n            cost: value,\n            onUpdate: 'inputCost', \n        })\n    }) \n\n    input.addEventListener('change', function() {\n        let value = +cleveInput.getRawValue();\n\n        if (value > getData().maxPrice) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().maxPrice);\n        }\n\n        if (value < getData().minPrice) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().minPrice);\n        }\n\n        value = +cleveInput.getRawValue();\n\n        updateModel(input, {\n            cost: value,\n            onUpdate: 'inputCost', \n        })\n    })\n\n    return cleveInput; \n} \n\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    const slider = document.querySelector('#slider-cost');\n    const data = getData();\n\n    noUiSlider.create(slider, {\n        start: data.cost,\n        connect: 'lower', \n        tooltips: true,\n        step: 100000,\n        range: {\n            min: data.minPrice,\n            '1%': [400000, 100000],\n            '50%': [10000000, 500000], \n            max: data.maxPrice,\n        },\n        format: wNumb({\n            decimals: 0,\n            thousand: ' ',\n            suffix: '',\n        }),\n    });\n\n    slider.noUiSlider.on('slide', function() {\n        // get slider value\n        let sliderValue = slider.noUiSlider.get();\n        sliderValue = sliderValue.split('.')[0];\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, '')); \n        \n        updateModel(slider, {\n            cost: sliderValue,\n            onUpdate: 'costSlider',\n        });\n    })\n\n    return slider; \n}  \n\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    const input = document.querySelector('#input-downpayment ');\n\n    const settings = {\n        numeral: true,\n        numeralThousandsGroupStyle: 'thousand',\n        delimiter: ' ',\n    }; \n\n    const cleveInput = new Cleave(input, settings);\n    cleveInput.setRawValue(getData().payment);\n\n    input.addEventListener('input', function() {\n        const value = +cleveInput.getRawValue();\n\n        // Checking the minimum and maximum first payment  \n        if (value < getData().getMinPayment() || value > getData().getMaxPayment()) {\n            input.closest('.param__details').classList.add('param__details--error');\n        }\n\n        if (value >= getData().getMinPayment()  &&  value <= getData().getMaxPayment() ) {\n            input.closest('.param__details').classList.remove('param__details--error');\n        }\n\n        updateModel(input, {\n            payment : value,\n            onUpdate: 'inputPayment', \n        })\n    }) \n\n    input.addEventListener('change', function() {\n        let value = +cleveInput.getRawValue();\n\n        if (value > getData().getMaxPayment()) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().getMaxPayment() );\n        }\n\n        if (value < getData().getMinPayment()) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().getMinPayment());\n        }\n\n        value = +cleveInput.getRawValue();\n\n        updateModel(input, {\n            payment: value,\n            onUpdate: 'inputPayment', \n        })\n    })\n\n    return cleveInput; \n}  \n\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    const slider = document.querySelector('#slider-downpayment ');\n\n    noUiSlider.create(slider, {\n        start: getData().paymentPercents * 100 ,\n        connect: 'lower', \n        tooltips: true,\n        step: 1 ,\n        range: {\n            min: getData().minPaymentPercents * 100,\n            max: getData().maxPaymentPercents * 100 ,\n        },\n        format: wNumb({\n            decimals: 0,\n            thousand: ' ',\n            suffix: '',\n        }),\n    });\n\n    slider.noUiSlider.on('slide', function() {\n        // get slider value\n        let sliderValue = slider.noUiSlider.get();\n        sliderValue = sliderValue.split('.')[0];\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, '')); \n        \n        updateModel(slider, {\n            paymentPercents: sliderValue,\n            onUpdate: 'paymentSlider',\n        });\n    })\n\n    return slider; \n}  \n\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\n\nfunction init(getData) {\n    const input = document.querySelector('#input-term');\n\n    const settings = {\n        numeral: true,\n        numeralThousandsGroupStyle: 'thousand',\n        delimiter: ' ',\n    };  \n\n    const cleveInput = new Cleave(input, settings);\n    cleveInput.setRawValue(getData().time);\n\n    input.addEventListener('input', function() {\n        const value = +cleveInput.getRawValue();\n\n        // Checking the minimum and maximum price \n        if (value < getData().minYear || value > getData().maxYear) {\n            input.closest('.param__details').classList.add('param__details--error');\n        }\n\n        if (value >= getData().minYear &&  value <= getData().maxYear ) {\n            input.closest('.param__details').classList.remove('param__details--error');\n        }\n\n        updateModel(input, {\n            time: value,\n            onUpdate: 'inputTime', \n        })\n    }) \n\n    input.addEventListener('change', function() {\n        let value = +cleveInput.getRawValue();\n\n        if (value > getData().maxYear) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().maxYear);\n        }\n\n        if (value < getData().minYear) {\n            input.closest('.param__details').classList.remove('param__details--error');\n            cleveInput.setRawValue(getData().minYear);\n        }\n\n        value = +cleveInput.getRawValue();\n\n        updateModel(input, {\n            time: value,\n            onUpdate: 'inputTime', \n        })\n    }) \n\n    return cleveInput; \n}\n\nexport default init;","import updateModel from \"../utils/updateModel.js\";\n\nfunction init(getData) {\n    const slider = document.querySelector('#slider-term');\n    const data = getData();\n\n    noUiSlider.create(slider, {\n        start: data.time,\n        connect: 'lower', \n        tooltips: true,\n        step: 1 ,\n        range: {\n            min: data.minYear,\n            max: data.maxYear,\n        },\n        format: wNumb({\n            decimals: 0,\n            thousand: ' ',\n            suffix: '',\n        }),\n    });\n\n    slider.noUiSlider.on('slide', function() {\n        // get slider value\n        let sliderValue = slider.noUiSlider.get();\n        sliderValue = sliderValue.split('.')[0];\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, '')); \n        \n        updateModel(slider, {\n            time: sliderValue,\n            onUpdate: 'timeSlider',\n        });\n    })\n\n    return slider; \n}  \n\nexport default init;","import * as Model from \"./model.js\";\nimport updateResultsView from \"./view/updateResultsView.js\";\nimport programs from \"./view/radioPrograms.js\";\nimport { updateMinPercents } from \"./view/utils.js\";\n\nimport costInput from \"./view/costInput.js\";\nimport costRange from \"./view/costRange.js\";\n\nimport paymentInput from \"./view/paymentInput.js\";\nimport paymentRange from \"./view/paymentRange.js\";\n\nimport timeInput from \"./view/timeInput.js\";\nimport timeRange from \"./view/timeRange.js\";\n\n\nwindow.onload = function () {\n    const getData = Model.getData;\n    \n    // Init programs\n    programs(getData);\n\n    // Init cost input \n    const cleveCost = costInput(getData);\n    // Init cost range\n    const sliderCost = costRange(getData);\n\n    // Init payment input\n    const clevePayment = paymentInput(getData);\n    // Init payment range\n    const sliderPayment = paymentRange(getData);\n\n\n    // Init time input\n    const cleveTime = timeInput(getData);\n    // Init time range\n    const sliderTime = timeRange(getData);\n\n    Model.setData({});\n    const results = Model.getResults();\n    updateResultsView(results);\n\n\n    document.addEventListener('updateForm', (e) => {\n        Model.setData(e.detail);\n\n        const data = Model.getData();\n        const results = Model.getResults();\n\n        // Update all form view based on model\n        updateFormAndSliders(data);\n\n        // Update results block\n        updateResultsView(results);\n    });\n\n    function updateFormAndSliders(data) {\n\n        // update radio btns\n        if (data.onUpdate === 'radioProgram') {\n            updateMinPercents(data);\n\n            // update slider\n            sliderPayment.noUiSlider.updateOptions({\n                range: {\n                    min: data.minPaymentPercents * 100,\n                    max: data.maxPaymentPercents * 100,\n                },\n            }); \n        }\n\n        // cost input\n        if (data.onUpdate !== 'inputCost') {\n            cleveCost.setRawValue(data.cost);\n        }\n\n        // cost slider\n        if (data.onUpdate !== 'costSlider') {\n            sliderCost.noUiSlider.set(data.cost);\n        }  \n\n        // payment input\n        if (data.onUpdate !== 'inputPayment') {\n            clevePayment.setRawValue(data.payment); \n        }\n\n        // payment slider\n        if (data.onUpdate !== 'paymentSlider') {\n            sliderPayment.noUiSlider.set(data.paymentPercents * 100); \n        } \n\n        // time input\n        if (data.onUpdate !== 'inputTime') {\n            cleveTime.setRawValue(data.time); \n        }\n\n        // time slider\n        if (data.onUpdate !== 'timeSlider') {\n            sliderTime.noUiSlider.set(data.time)\n        }\n    }\n\n    // order form\n    const openFormBtn = document.querySelector('#openFormBtn');\n    const orderForm = document.querySelector('#orderForm');\n    const submitFormBtn = document.querySelector('#submitFormBtn');\n\n    openFormBtn.addEventListener('click', function() {\n        orderForm.classList.remove('none');\n        openFormBtn.classList.add('none');\n    })\n\n    orderForm.addEventListener('submit', function(e) {\n        e.preventDefault();\n\n        // collect data from form\n        const formData = new FormData(orderForm);\n        console.log(formData);\n        console.log(formData.get('name'));\n        console.log(formData.get('email'));\n        console.log(formData.get('phone'));\n\n        // disable for btn and inputs\n        submitFormBtn.setAttribute('disabled', true);\n        submitFormBtn.innerText = 'Заявка отправляется...';\n\n        orderForm.querySelectorAll ('input').forEach(function(input) {\n            input.setAttribute('disabled', true);\n        });\n\n        fetchData();\n\n        async function fetchData() {\n            const data = Model.getData();\n            const results = Model.getResults();\n\n            let url = checkOnUrl(document.location.href);\n\n            function checkOnUrl(url) {\n                let urlArrayDot = url.split('.');\n\n                if (url[url.length - 1] === 'html') {\n                    urlArrayDot.pop();\n                    let newUlr = urlArrayDot.join('.');\n                    let urlArraySlash = newUrl.split('/');\n                    urlArraySlash.pop();\n                    newUlr = urlArraySlash.join('/') + '/';\n\n                    return newUlr;\n                }\n\n                return url;\n            }\n\n            const response = await fetch(url + 'mail.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'applicaton/json;charset=utf-8',\n                },\n                body: JSON.stringify({\n                    form: {\n                        name: formData.get('name'),\n                        email: formData.get('email'),\n                        phone: formData.get('phone'), \n                    },\n                    data,\n                    results,\n                })\n            });\n\n            const result = await response.text();\n            console.log(result);\n\n            submitFormBtn.removeAttribute('disabled', true);\n            submitFormBtn.innerText = 'Оформить заявку';\n\n            orderForm.querySelectorAll ('input').forEach(function(input) {\n                input.removeAttribute('disabled', true);\n            });\n\n            // clean form fields\n            orderForm.reset();\n            orderForm.classList.add('none');\n\n            // receive an answer\n            if (result === 'SUCCESS') {\n                document.getElementById('success').classList.remove('none');\n            } else {\n                document.getElementById('error').classList.remove('none');\n            }\n        }\n    })\n\n}"]}